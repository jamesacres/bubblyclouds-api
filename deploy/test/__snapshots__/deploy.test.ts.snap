// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Api Stack 1`] = `
{
  "Outputs": {
    "ApiGatewayEndpoint5AA8EC3A": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "ApiGateway11E7F47B",
            },
            ".execute-api.eu-west-2.",
            {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            {
              "Ref": "ApiGatewayDeploymentStageprod1C6D5CD6",
            },
            "/",
          ],
        ],
      },
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "ApiAppConfigApplication": {
      "Properties": {
        "Name": "mockapplicationname",
      },
      "Type": "AWS::AppConfig::Application",
    },
    "ApiAppConfigConfigurationProfile": {
      "Properties": {
        "ApplicationId": {
          "Ref": "ApiAppConfigApplication",
        },
        "LocationUri": "hosted",
        "Name": "mockenvironmentname",
        "Type": "AWS.Freeform",
      },
      "Type": "AWS::AppConfig::ConfigurationProfile",
    },
    "ApiAppConfigEnvironment": {
      "Properties": {
        "ApplicationId": {
          "Ref": "ApiAppConfigApplication",
        },
        "Name": "mockenvironmentname",
      },
      "Type": "AWS::AppConfig::Environment",
    },
    "ApiDomain2D27DFFC": {
      "Properties": {
        "CertificateArn": "mockCertificateArn",
        "DomainName": "mocksubdomain.mockdomain.test",
        "EndpointConfiguration": {
          "Types": [
            "EDGE",
          ],
        },
        "SecurityPolicy": "TLS_1_2",
      },
      "Type": "AWS::ApiGateway::DomainName",
    },
    "ApiDomainMapApiStackApiGateway6929C04A6FDB3C38": {
      "Properties": {
        "DomainName": {
          "Ref": "ApiDomain2D27DFFC",
        },
        "RestApiId": {
          "Ref": "ApiGateway11E7F47B",
        },
        "Stage": {
          "Ref": "ApiGatewayDeploymentStageprod1C6D5CD6",
        },
      },
      "Type": "AWS::ApiGateway::BasePathMapping",
    },
    "ApiFunctionCE271BD4": {
      "DependsOn": [
        "ApiFunctionServiceRoleDefaultPolicy20A32B8D",
        "ApiFunctionServiceRole52B9747B",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-12345678-eu-west-2",
          "S3Key": Any<String>,
        },
        "Environment": {
          "Variables": {
            "API_TABLE": "ApiStack-ApiTable21517941-1JLBDQLD4OA69",
            "AWS_APPCONFIG_EXTENSION_PREFETCH_LIST": {
              "Fn::Sub": [
                "/applications/\${applicationId}/environments/\${environmentId}/configurations/\${configurationId}",
                {
                  "applicationId": "mockapplicationname",
                  "configurationId": "mockenvironmentname",
                  "environmentId": "mockenvironmentname",
                },
              ],
            },
          },
        },
        "FunctionName": "Api",
        "Handler": "main.handler",
        "Layers": [
          "arn:aws:lambda:eu-west-2:282860088358:layer:AWS-AppConfig-Extension:93",
        ],
        "MemorySize": 512,
        "Role": {
          "Fn::GetAtt": [
            "ApiFunctionServiceRole52B9747B",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
        "Timeout": 15,
      },
      "Type": "AWS::Lambda::Function",
    },
    "ApiFunctionLogRetentionDCC3A405": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "ApiFunctionCE271BD4",
              },
            ],
          ],
        },
        "RetentionInDays": 7,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "ApiFunctionServiceRole52B9747B": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ApiFunctionServiceRoleDefaultPolicy20A32B8D": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "appconfig:GetLatestConfiguration",
                "appconfig:StartConfigurationSession",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Sub": [
                  "arn:aws:appconfig:\${region}:\${accountId}:application/\${applicationId}/environment/\${environmentId}/configuration/\${configurationId}",
                  {
                    "accountId": "12345678",
                    "applicationId": {
                      "Ref": "ApiAppConfigApplication",
                    },
                    "configurationId": {
                      "Ref": "ApiAppConfigConfigurationProfile",
                    },
                    "environmentId": {
                      "Ref": "ApiAppConfigEnvironment",
                    },
                    "region": "eu-west-2",
                  },
                ],
              },
            },
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "ApiTable21517941",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "ApiTable21517941",
                          "Arn",
                        ],
                      },
                      "/index/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ApiFunctionServiceRoleDefaultPolicy20A32B8D",
        "Roles": [
          {
            "Ref": "ApiFunctionServiceRole52B9747B",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ApiGateway11E7F47B": {
      "Properties": {
        "EndpointConfiguration": {
          "Types": [
            "EDGE",
          ],
        },
        "Name": "ApiGateway",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "ApiGatewayANY64A155AA": {
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "ANY",
        "Integration": {
          "Type": "MOCK",
        },
        "ResourceId": {
          "Fn::GetAtt": [
            "ApiGateway11E7F47B",
            "RootResourceId",
          ],
        },
        "RestApiId": {
          "Ref": "ApiGateway11E7F47B",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "ApiGatewayAccountBC7F34C1": {
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "ApiGateway11E7F47B",
      ],
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "ApiGatewayCloudWatchRoleA41EF9FE",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
      "UpdateReplacePolicy": "Retain",
    },
    "ApiGatewayCloudWatchRoleA41EF9FE": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
      "UpdateReplacePolicy": "Retain",
    },
    "ApiGatewayDeploymentA26796E843590d65c4bf00311b8265dbed654686": {
      "DependsOn": [
        "ApiGatewayproxyANYF4919107",
        "ApiGatewayproxyD06ED2EE",
        "ApiGatewayANY64A155AA",
        "ApiGatewayGET25EBFEA3",
      ],
      "Properties": {
        "Description": "Automatically created by the RestApi construct",
        "RestApiId": {
          "Ref": "ApiGateway11E7F47B",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
    },
    "ApiGatewayDeploymentStageprod1C6D5CD6": {
      "DependsOn": [
        "ApiGatewayAccountBC7F34C1",
      ],
      "Properties": {
        "DeploymentId": {
          "Ref": "ApiGatewayDeploymentA26796E843590d65c4bf00311b8265dbed654686",
        },
        "MethodSettings": [
          {
            "DataTraceEnabled": false,
            "HttpMethod": "*",
            "LoggingLevel": "ERROR",
            "MetricsEnabled": true,
            "ResourcePath": "/*",
          },
        ],
        "RestApiId": {
          "Ref": "ApiGateway11E7F47B",
        },
        "StageName": "prod",
        "TracingEnabled": true,
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "ApiGatewayGET25EBFEA3": {
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "GET",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:eu-west-2:lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "ApiFunctionCE271BD4",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": {
          "Fn::GetAtt": [
            "ApiGateway11E7F47B",
            "RootResourceId",
          ],
        },
        "RestApiId": {
          "Ref": "ApiGateway11E7F47B",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "ApiGatewayGETApiPermissionApiStackApiGateway6929C04AGET2C5FDF4A": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "ApiFunctionCE271BD4",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:eu-west-2:12345678:",
              {
                "Ref": "ApiGateway11E7F47B",
              },
              "/",
              {
                "Ref": "ApiGatewayDeploymentStageprod1C6D5CD6",
              },
              "/GET/",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ApiGatewayGETApiPermissionTestApiStackApiGateway6929C04AGET33CE23F3": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "ApiFunctionCE271BD4",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:eu-west-2:12345678:",
              {
                "Ref": "ApiGateway11E7F47B",
              },
              "/test-invoke-stage/GET/",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ApiGatewayproxyANYApiPermissionApiStackApiGateway6929C04AANYproxyD75CDFA0": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "ApiFunctionCE271BD4",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:eu-west-2:12345678:",
              {
                "Ref": "ApiGateway11E7F47B",
              },
              "/",
              {
                "Ref": "ApiGatewayDeploymentStageprod1C6D5CD6",
              },
              "/*/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ApiGatewayproxyANYApiPermissionTestApiStackApiGateway6929C04AANYproxyB24B2E6F": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "ApiFunctionCE271BD4",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:eu-west-2:12345678:",
              {
                "Ref": "ApiGateway11E7F47B",
              },
              "/test-invoke-stage/*/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ApiGatewayproxyANYF4919107": {
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "ANY",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:eu-west-2:lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "ApiFunctionCE271BD4",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": {
          "Ref": "ApiGatewayproxyD06ED2EE",
        },
        "RestApiId": {
          "Ref": "ApiGateway11E7F47B",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "ApiGatewayproxyD06ED2EE": {
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "ApiGateway11E7F47B",
            "RootResourceId",
          ],
        },
        "PathPart": "{proxy+}",
        "RestApiId": {
          "Ref": "ApiGateway11E7F47B",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "ApiTable21517941": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "modelId",
            "AttributeType": "S",
          },
          {
            "AttributeName": "owner",
            "AttributeType": "S",
          },
        ],
        "DeletionProtectionEnabled": true,
        "GlobalSecondaryIndexes": [
          {
            "IndexName": "ownerIndex",
            "KeySchema": [
              {
                "AttributeName": "owner",
                "KeyType": "HASH",
              },
              {
                "AttributeName": "modelId",
                "KeyType": "RANGE",
              },
            ],
            "Projection": {
              "ProjectionType": "ALL",
            },
            "ProvisionedThroughput": {
              "ReadCapacityUnits": 5,
              "WriteCapacityUnits": 5,
            },
          },
        ],
        "KeySchema": [
          {
            "AttributeName": "modelId",
            "KeyType": "HASH",
          },
          {
            "AttributeName": "owner",
            "KeyType": "RANGE",
          },
        ],
        "PointInTimeRecoverySpecification": {
          "PointInTimeRecoveryEnabled": true,
        },
        "ProvisionedThroughput": {
          "ReadCapacityUnits": 5,
          "WriteCapacityUnits": 5,
        },
        "TimeToLiveSpecification": {
          "AttributeName": "expiresAt",
          "Enabled": true,
        },
      },
      "Type": "AWS::DynamoDB::Table",
      "UpdateReplacePolicy": "Retain",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": {
      "DependsOn": [
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-12345678-eu-west-2",
          "S3Key": "4e26bf2d0a26f2097fb2b261f22bb51e3f6b4b52635777b1e54edbd8e2d58c35.zip",
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:PutRetentionPolicy",
                "logs:DeleteRetentionPolicy",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "Roles": [
          {
            "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
